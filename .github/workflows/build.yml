name: build

on:
  pull_request:
    branches: [master, develop]

jobs:
  android:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.15.0'

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      - name: Generate .npmrc for pintura package
        run: npm run preconfig.npmrc

      - name: Install dependencies
        run: npm install

      - name: Build Ionic
        env:
          NUMBERS_STORAGE_BASE_URL: ${{ secrets.NUMBERS_STORAGE_BASE_URL }}
          NUMBERS_STORAGE_TRUSTED_CLIENT_KEY: ${{ secrets.NUMBERS_STORAGE_TRUSTED_CLIENT_KEY }}
          NUMBERS_BUBBLE_DB_URL: ${{ secrets.NUMBERS_BUBBLE_DB_URL }}
          NUMBERS_BUBBLE_IFRAME_URL: ${{ secrets.NUMBERS_BUBBLE_IFRAME_URL }}
          BUBBLE_API_URL: ${{ secrets.BUBBLE_API_URL }}
          APPS_FLYER_DEV_KEY: ${{ secrets.APPS_FLYER_DEV_KEY }}
        run: npm run build

      - name: Build Android
        run: |
          npx cap sync android
          cd android/
          ./gradlew assembleDebug

  ios:
    runs-on: macos-latest
    timeout-minutes: 60
    if: github.actor != 'dependabot[bot]'

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.15.0'

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      - name: Generate .npmrc for pintura package
        run: npm run preconfig.npmrc

      - name: Install dependencies
        run: npm install

      - name: Build Ionic
        env:
          NUMBERS_STORAGE_BASE_URL: ${{ secrets.NUMBERS_STORAGE_BASE_URL }}
          NUMBERS_STORAGE_TRUSTED_CLIENT_KEY: ${{ secrets.NUMBERS_STORAGE_TRUSTED_CLIENT_KEY }}
          NUMBERS_BUBBLE_DB_URL: ${{ secrets.NUMBERS_BUBBLE_DB_URL }}
          NUMBERS_BUBBLE_IFRAME_URL: ${{ secrets.NUMBERS_BUBBLE_IFRAME_URL }}
          BUBBLE_API_URL: ${{ secrets.BUBBLE_API_URL }}
          APPS_FLYER_DEV_KEY: ${{ secrets.APPS_FLYER_DEV_KEY }}
        run: npm run build

      - name: Import the Code-Signing PKCS12 Certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

      - name: Download provisioning profiles
        uses: Apple-Actions/download-provisioning-profiles@v1
        with:
          bundle-id: io.numbersprotocol.capturelite
          profile-type: 'IOS_APP_STORE'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Build iOS
        run: |
          npx cap sync ios
          xcodebuild archive -workspace ios/App/App.xcworkspace -scheme App -sdk iphoneos  -configuration Debug -archivePath build/App.xcarchive -showBuildTimingSummary -allowProvisioningUpdates archive

  notification-success:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    needs: [android, ios]

    steps:
      - uses: actions/checkout@v2

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ github.ref == 'refs/heads/develop' || github.event.pull_request.base.ref == 'develop'}}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: 'success'

  notification-failure:
    runs-on: ubuntu-latest
    needs: [android, ios]
    if: ${{ failure() && github.actor != 'dependabot[bot]'}}

    steps:
      - uses: actions/checkout@v2

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ github.ref == 'refs/heads/develop' || github.event.pull_request.base.ref == 'develop'}}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: 'failure'
